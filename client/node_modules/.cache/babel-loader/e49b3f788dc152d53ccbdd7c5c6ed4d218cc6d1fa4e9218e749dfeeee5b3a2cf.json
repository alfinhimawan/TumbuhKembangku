{"ast":null,"code":"import _objectSpread from\"D:/Infinite/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{storage,generateId}from'../utils/helpers';import{useAuth}from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ChildContext=/*#__PURE__*/createContext(undefined);// Dummy children data\nconst dummyChildren=[{id:'1',parentId:'1',name:'Aisyah',birthDate:new Date('2023-03-15'),// 18 months old\ngender:'female',createdAt:new Date('2023-03-15')},{id:'2',parentId:'1',name:'Ahmad',birthDate:new Date('2023-11-20'),// 10 months old\ngender:'male',createdAt:new Date('2023-11-20')},{id:'3',parentId:'2',name:'Zahra',birthDate:new Date('2024-01-10'),// 8 months old\ngender:'female',createdAt:new Date('2024-01-10')}];export const ChildProvider=_ref=>{let{children}=_ref;const{user}=useAuth();const[childrenList,setChildrenList]=useState([]);const[selectedChild,setSelectedChild]=useState(null);useEffect(()=>{if(user){// Get children for current user\nconst userChildren=dummyChildren.filter(child=>child.parentId===user.id);setChildrenList(userChildren);// Load selected child from storage or select first child\nconst storedSelectedChildId=storage.get(\"selectedChild_\".concat(user.id));if(storedSelectedChildId){const storedChild=userChildren.find(c=>c.id===storedSelectedChildId);if(storedChild){setSelectedChild(storedChild);}else if(userChildren.length>0){setSelectedChild(userChildren[0]);}}else if(userChildren.length>0){setSelectedChild(userChildren[0]);}}else{setChildrenList([]);setSelectedChild(null);}},[user]);const addChild=childData=>{if(!user)return;const newChild=_objectSpread(_objectSpread({},childData),{},{id:generateId(),parentId:user.id,createdAt:new Date()});dummyChildren.push(newChild);setChildrenList(prev=>[...prev,newChild]);// Auto-select new child if it's the first one\nif(childrenList.length===0){setSelectedChild(newChild);storage.set(\"selectedChild_\".concat(user.id),newChild.id);}};const updateChild=(id,updates)=>{const updatedChild=_objectSpread(_objectSpread({},childrenList.find(c=>c.id===id)),updates);// Update in dummy data\nconst index=dummyChildren.findIndex(c=>c.id===id);if(index!==-1){dummyChildren[index]=updatedChild;}// Update in state\nsetChildrenList(prev=>prev.map(c=>c.id===id?updatedChild:c));// Update selected child if it's the one being updated\nif((selectedChild===null||selectedChild===void 0?void 0:selectedChild.id)===id){setSelectedChild(updatedChild);}};const selectChild=child=>{setSelectedChild(child);if(user){storage.set(\"selectedChild_\".concat(user.id),child.id);}};const deleteChild=id=>{// Remove from dummy data\nconst index=dummyChildren.findIndex(c=>c.id===id);if(index!==-1){dummyChildren.splice(index,1);}// Remove from state\nconst updatedChildren=childrenList.filter(c=>c.id!==id);setChildrenList(updatedChildren);// Update selected child\nif((selectedChild===null||selectedChild===void 0?void 0:selectedChild.id)===id){const newSelected=updatedChildren.length>0?updatedChildren[0]:null;setSelectedChild(newSelected);if(user){if(newSelected){storage.set(\"selectedChild_\".concat(user.id),newSelected.id);}else{storage.remove(\"selectedChild_\".concat(user.id));}}}};const value={children:childrenList,selectedChild,addChild,updateChild,selectChild,deleteChild};return/*#__PURE__*/_jsx(ChildContext.Provider,{value:value,children:children});};export const useChildren=()=>{const context=useContext(ChildContext);if(!context){throw new Error('useChildren must be used within a ChildProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","storage","generateId","useAuth","jsx","_jsx","ChildContext","undefined","dummyChildren","id","parentId","name","birthDate","Date","gender","createdAt","ChildProvider","_ref","children","user","childrenList","setChildrenList","selectedChild","setSelectedChild","userChildren","filter","child","storedSelectedChildId","get","concat","storedChild","find","c","length","addChild","childData","newChild","_objectSpread","push","prev","set","updateChild","updates","updatedChild","index","findIndex","map","selectChild","deleteChild","splice","updatedChildren","newSelected","remove","value","Provider","useChildren","context","Error"],"sources":["D:/Infinite/client/src/contexts/ChildContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { Child, ChildContextType } from '../types';\r\nimport { storage, generateId } from '../utils/helpers';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst ChildContext = createContext<ChildContextType | undefined>(undefined);\r\n\r\n// Dummy children data\r\nconst dummyChildren: Child[] = [\r\n  {\r\n    id: '1',\r\n    parentId: '1',\r\n    name: 'Aisyah',\r\n    birthDate: new Date('2023-03-15'), // 18 months old\r\n    gender: 'female',\r\n    createdAt: new Date('2023-03-15')\r\n  },\r\n  {\r\n    id: '2',\r\n    parentId: '1',\r\n    name: 'Ahmad',\r\n    birthDate: new Date('2023-11-20'), // 10 months old\r\n    gender: 'male',\r\n    createdAt: new Date('2023-11-20')\r\n  },\r\n  {\r\n    id: '3',\r\n    parentId: '2',\r\n    name: 'Zahra',\r\n    birthDate: new Date('2024-01-10'), // 8 months old\r\n    gender: 'female',\r\n    createdAt: new Date('2024-01-10')\r\n  }\r\n];\r\n\r\nexport const ChildProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const { user } = useAuth();\r\n  const [childrenList, setChildrenList] = useState<Child[]>([]);\r\n  const [selectedChild, setSelectedChild] = useState<Child | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      // Get children for current user\r\n      const userChildren = dummyChildren.filter(child => child.parentId === user.id);\r\n      setChildrenList(userChildren);\r\n      \r\n      // Load selected child from storage or select first child\r\n      const storedSelectedChildId = storage.get(`selectedChild_${user.id}`);\r\n      if (storedSelectedChildId) {\r\n        const storedChild = userChildren.find(c => c.id === storedSelectedChildId);\r\n        if (storedChild) {\r\n          setSelectedChild(storedChild);\r\n        } else if (userChildren.length > 0) {\r\n          setSelectedChild(userChildren[0]);\r\n        }\r\n      } else if (userChildren.length > 0) {\r\n        setSelectedChild(userChildren[0]);\r\n      }\r\n    } else {\r\n      setChildrenList([]);\r\n      setSelectedChild(null);\r\n    }\r\n  }, [user]);\r\n\r\n  const addChild = (childData: Omit<Child, 'id' | 'parentId' | 'createdAt'>) => {\r\n    if (!user) return;\r\n    \r\n    const newChild: Child = {\r\n      ...childData,\r\n      id: generateId(),\r\n      parentId: user.id,\r\n      createdAt: new Date()\r\n    };\r\n    \r\n    dummyChildren.push(newChild);\r\n    setChildrenList(prev => [...prev, newChild]);\r\n    \r\n    // Auto-select new child if it's the first one\r\n    if (childrenList.length === 0) {\r\n      setSelectedChild(newChild);\r\n      storage.set(`selectedChild_${user.id}`, newChild.id);\r\n    }\r\n  };\r\n\r\n  const updateChild = (id: string, updates: Partial<Child>) => {\r\n    const updatedChild = { ...childrenList.find(c => c.id === id)!, ...updates };\r\n    \r\n    // Update in dummy data\r\n    const index = dummyChildren.findIndex(c => c.id === id);\r\n    if (index !== -1) {\r\n      dummyChildren[index] = updatedChild;\r\n    }\r\n    \r\n    // Update in state\r\n    setChildrenList(prev => prev.map(c => c.id === id ? updatedChild : c));\r\n    \r\n    // Update selected child if it's the one being updated\r\n    if (selectedChild?.id === id) {\r\n      setSelectedChild(updatedChild);\r\n    }\r\n  };\r\n\r\n  const selectChild = (child: Child) => {\r\n    setSelectedChild(child);\r\n    if (user) {\r\n      storage.set(`selectedChild_${user.id}`, child.id);\r\n    }\r\n  };\r\n\r\n  const deleteChild = (id: string) => {\r\n    // Remove from dummy data\r\n    const index = dummyChildren.findIndex(c => c.id === id);\r\n    if (index !== -1) {\r\n      dummyChildren.splice(index, 1);\r\n    }\r\n    \r\n    // Remove from state\r\n    const updatedChildren = childrenList.filter(c => c.id !== id);\r\n    setChildrenList(updatedChildren);\r\n    \r\n    // Update selected child\r\n    if (selectedChild?.id === id) {\r\n      const newSelected = updatedChildren.length > 0 ? updatedChildren[0] : null;\r\n      setSelectedChild(newSelected);\r\n      if (user) {\r\n        if (newSelected) {\r\n          storage.set(`selectedChild_${user.id}`, newSelected.id);\r\n        } else {\r\n          storage.remove(`selectedChild_${user.id}`);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const value: ChildContextType = {\r\n    children: childrenList,\r\n    selectedChild,\r\n    addChild,\r\n    updateChild,\r\n    selectChild,\r\n    deleteChild\r\n  };\r\n\r\n  return (\r\n    <ChildContext.Provider value={value}>\r\n      {children}\r\n    </ChildContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useChildren = (): ChildContextType => {\r\n  const context = useContext(ChildContext);\r\n  if (!context) {\r\n    throw new Error('useChildren must be used within a ChildProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}