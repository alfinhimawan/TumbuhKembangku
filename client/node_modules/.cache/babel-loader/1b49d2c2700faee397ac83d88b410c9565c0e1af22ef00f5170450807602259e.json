{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{storage,generateId}from'../utils/helpers';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);// Dummy users data\nconst dummyUsers=[{id:'1',email:'parent@example.com',name:'Ibu Sarah',phone:'08123456789',createdAt:new Date('2024-01-01')},{id:'2',email:'ayah@example.com',name:'Ayah Budi',phone:'08123456790',createdAt:new Date('2024-01-02')}];export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{// Check for stored user on app start\nconst storedUser=storage.get('currentUser');if(storedUser){setUser(storedUser);}setLoading(false);},[]);const login=async(email,password)=>{setLoading(true);// Simulate API call\nawait new Promise(resolve=>setTimeout(resolve,1000));// Check dummy users\nconst foundUser=dummyUsers.find(u=>u.email===email);if(!foundUser){setLoading(false);throw new Error('Email tidak ditemukan');}// In real app, validate password with backend\nif(password!=='password123'){setLoading(false);throw new Error('Password salah');}setUser(foundUser);storage.set('currentUser',foundUser);setLoading(false);};const register=async(email,password,name)=>{setLoading(true);// Simulate API call\nawait new Promise(resolve=>setTimeout(resolve,1000));// Check if user already exists\nconst existingUser=dummyUsers.find(u=>u.email===email);if(existingUser){setLoading(false);throw new Error('Email sudah terdaftar');}// Create new user\nconst newUser={id:generateId(),email,name,createdAt:new Date()};dummyUsers.push(newUser);setUser(newUser);storage.set('currentUser',newUser);setLoading(false);};const logout=()=>{setUser(null);storage.remove('currentUser');};const value={user,login,register,logout,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","storage","generateId","jsx","_jsx","AuthContext","undefined","dummyUsers","id","email","name","phone","createdAt","Date","AuthProvider","_ref","children","user","setUser","loading","setLoading","storedUser","get","login","password","Promise","resolve","setTimeout","foundUser","find","u","Error","set","register","existingUser","newUser","push","logout","remove","value","Provider","useAuth","context"],"sources":["D:/Infinite/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { User, AuthContextType } from '../types';\r\nimport { storage, generateId } from '../utils/helpers';\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// Dummy users data\r\nconst dummyUsers: User[] = [\r\n  {\r\n    id: '1',\r\n    email: 'parent@example.com',\r\n    name: 'Ibu Sarah',\r\n    phone: '08123456789',\r\n    createdAt: new Date('2024-01-01')\r\n  },\r\n  {\r\n    id: '2',\r\n    email: 'ayah@example.com',\r\n    name: 'Ayah Budi',\r\n    phone: '08123456790',\r\n    createdAt: new Date('2024-01-02')\r\n  }\r\n];\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check for stored user on app start\r\n    const storedUser = storage.get('currentUser');\r\n    if (storedUser) {\r\n      setUser(storedUser);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string): Promise<void> => {\r\n    setLoading(true);\r\n    \r\n    // Simulate API call\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    // Check dummy users\r\n    const foundUser = dummyUsers.find(u => u.email === email);\r\n    \r\n    if (!foundUser) {\r\n      setLoading(false);\r\n      throw new Error('Email tidak ditemukan');\r\n    }\r\n    \r\n    // In real app, validate password with backend\r\n    if (password !== 'password123') {\r\n      setLoading(false);\r\n      throw new Error('Password salah');\r\n    }\r\n    \r\n    setUser(foundUser);\r\n    storage.set('currentUser', foundUser);\r\n    setLoading(false);\r\n  };\r\n\r\n  const register = async (email: string, password: string, name: string): Promise<void> => {\r\n    setLoading(true);\r\n    \r\n    // Simulate API call\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    // Check if user already exists\r\n    const existingUser = dummyUsers.find(u => u.email === email);\r\n    if (existingUser) {\r\n      setLoading(false);\r\n      throw new Error('Email sudah terdaftar');\r\n    }\r\n    \r\n    // Create new user\r\n    const newUser: User = {\r\n      id: generateId(),\r\n      email,\r\n      name,\r\n      createdAt: new Date()\r\n    };\r\n    \r\n    dummyUsers.push(newUser);\r\n    setUser(newUser);\r\n    storage.set('currentUser', newUser);\r\n    setLoading(false);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    storage.remove('currentUser');\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}