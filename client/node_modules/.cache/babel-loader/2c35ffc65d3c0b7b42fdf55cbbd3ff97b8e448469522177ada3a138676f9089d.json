{"ast":null,"code":"import { differenceInMonths, differenceInDays, format, parseISO } from 'date-fns';\nimport { id } from 'date-fns/locale';\n\n// Calculate age in months and days\nexport const calculateAge = birthDate => {\n  const birth = typeof birthDate === 'string' ? parseISO(birthDate) : birthDate;\n  const today = new Date();\n  const months = differenceInMonths(today, birth);\n  const totalDays = differenceInDays(today, birth);\n\n  // Calculate remaining days after full months\n  const monthsInDays = Math.floor(totalDays / 30.44); // Average days per month\n  const days = totalDays - monthsInDays * 30.44;\n  return {\n    months,\n    days: Math.floor(days),\n    totalDays\n  };\n};\n\n// Format age for display\nexport const formatAge = birthDate => {\n  const age = calculateAge(birthDate);\n  if (age.months < 1) {\n    return `${age.totalDays} hari`;\n  } else if (age.months < 12) {\n    return `${age.months} bulan ${age.days} hari`;\n  } else {\n    const years = Math.floor(age.months / 12);\n    const remainingMonths = age.months % 12;\n    return `${years} tahun ${remainingMonths} bulan`;\n  }\n};\n\n// Format date for display\nexport const formatDate = (date, formatStr = 'dd MMMM yyyy') => {\n  const dateObj = typeof date === 'string' ? parseISO(date) : date;\n  return format(dateObj, formatStr, {\n    locale: id\n  });\n};\n\n// Generate unique ID\nexport const generateId = () => {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n};\n\n// Calculate KPSP score and result\nexport const calculateKPSPResult = (answers, totalQuestions) => {\n  const yesAnswers = Object.values(answers).filter(answer => answer).length;\n  const score = yesAnswers;\n  const percentage = score / totalQuestions * 100;\n  let result;\n  let resultColor;\n  let resultMessage;\n  if (percentage >= 80) {\n    result = 'sesuai';\n    resultColor = 'text-green-600';\n    resultMessage = 'Perkembangan anak sesuai dengan tahapan usianya. Teruskan stimulasi yang sudah dilakukan.';\n  } else if (percentage >= 60) {\n    result = 'meragukan';\n    resultColor = 'text-yellow-600';\n    resultMessage = 'Ada beberapa aspek perkembangan yang perlu mendapat perhatian lebih. Lakukan stimulasi lebih intensif.';\n  } else {\n    result = 'penyimpangan';\n    resultColor = 'text-red-600';\n    resultMessage = 'Beberapa aspek perkembangan memerlukan perhatian khusus. Disarankan konsultasi dengan tenaga kesehatan.';\n  }\n  return {\n    score,\n    maxScore: totalQuestions,\n    percentage: Math.round(percentage),\n    result,\n    resultColor,\n    resultMessage\n  };\n};\n\n// Get recommendations based on failed aspects\nexport const getRecommendations = (answers, questions) => {\n  const recommendations = [];\n  const failedAspects = new Set();\n\n  // Identify failed aspects\n  questions.forEach(q => {\n    if (!answers[q.id]) {\n      failedAspects.add(q.aspect);\n    }\n  });\n\n  // Generate recommendations based on failed aspects\n  if (failedAspects.has('motorik_kasar')) {\n    recommendations.push('Lakukan lebih banyak aktivitas fisik seperti tummy time, latihan duduk, atau bermain bola');\n  }\n  if (failedAspects.has('motorik_halus')) {\n    recommendations.push('Berikan mainan yang merangsang kemampuan tangan seperti rattle, finger food, atau aktivitas menggambar');\n  }\n  if (failedAspects.has('bicara_bahasa')) {\n    recommendations.push('Perbanyak interaksi verbal, bacakan buku, nyanyikan lagu, dan ajak anak berbicara');\n  }\n  if (failedAspects.has('sosialisasi_kemandirian')) {\n    recommendations.push('Ajarkan kemandirian sederhana seperti makan sendiri, bermain dengan anak lain, dan rutinitas harian');\n  }\n  return recommendations;\n};\n\n// Validate email format\nexport const isValidEmail = email => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\n// Validate password strength\nexport const validatePassword = password => {\n  if (password.length < 6) {\n    return {\n      isValid: false,\n      message: 'Password minimal 6 karakter'\n    };\n  }\n  if (password.length > 50) {\n    return {\n      isValid: false,\n      message: 'Password maksimal 50 karakter'\n    };\n  }\n  return {\n    isValid: true,\n    message: 'Password valid'\n  };\n};\n\n// Storage helpers\nexport const storage = {\n  get: key => {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : null;\n    } catch {\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error('Storage error:', error);\n    }\n  },\n  remove: key => {\n    try {\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.error('Storage error:', error);\n    }\n  },\n  clear: () => {\n    try {\n      localStorage.clear();\n    } catch (error) {\n      console.error('Storage error:', error);\n    }\n  }\n};\n\n// Debounce function for search\nexport const debounce = (func, delay) => {\n  let timeoutId;\n  return (...args) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => func.apply(null, args), delay);\n  };\n};","map":{"version":3,"names":["differenceInMonths","differenceInDays","format","parseISO","id","calculateAge","birthDate","birth","today","Date","months","totalDays","monthsInDays","Math","floor","days","formatAge","age","years","remainingMonths","formatDate","date","formatStr","dateObj","locale","generateId","random","toString","substring","calculateKPSPResult","answers","totalQuestions","yesAnswers","Object","values","filter","answer","length","score","percentage","result","resultColor","resultMessage","maxScore","round","getRecommendations","questions","recommendations","failedAspects","Set","forEach","q","add","aspect","has","push","isValidEmail","email","emailRegex","test","validatePassword","password","isValid","message","storage","get","key","item","localStorage","getItem","JSON","parse","set","value","setItem","stringify","error","console","remove","removeItem","clear","debounce","func","delay","timeoutId","args","clearTimeout","setTimeout","apply"],"sources":["D:/Infinite/client/src/utils/helpers.ts"],"sourcesContent":["import { differenceInMonths, differenceInDays, format, parseISO } from 'date-fns';\r\nimport { id } from 'date-fns/locale';\r\n\r\n// Calculate age in months and days\r\nexport const calculateAge = (birthDate: Date | string): { months: number; days: number; totalDays: number } => {\r\n  const birth = typeof birthDate === 'string' ? parseISO(birthDate) : birthDate;\r\n  const today = new Date();\r\n  \r\n  const months = differenceInMonths(today, birth);\r\n  const totalDays = differenceInDays(today, birth);\r\n  \r\n  // Calculate remaining days after full months\r\n  const monthsInDays = Math.floor(totalDays / 30.44); // Average days per month\r\n  const days = totalDays - (monthsInDays * 30.44);\r\n  \r\n  return {\r\n    months,\r\n    days: Math.floor(days),\r\n    totalDays\r\n  };\r\n};\r\n\r\n// Format age for display\r\nexport const formatAge = (birthDate: Date | string): string => {\r\n  const age = calculateAge(birthDate);\r\n  \r\n  if (age.months < 1) {\r\n    return `${age.totalDays} hari`;\r\n  } else if (age.months < 12) {\r\n    return `${age.months} bulan ${age.days} hari`;\r\n  } else {\r\n    const years = Math.floor(age.months / 12);\r\n    const remainingMonths = age.months % 12;\r\n    return `${years} tahun ${remainingMonths} bulan`;\r\n  }\r\n};\r\n\r\n// Format date for display\r\nexport const formatDate = (date: Date | string, formatStr: string = 'dd MMMM yyyy'): string => {\r\n  const dateObj = typeof date === 'string' ? parseISO(date) : date;\r\n  return format(dateObj, formatStr, { locale: id });\r\n};\r\n\r\n// Generate unique ID\r\nexport const generateId = (): string => {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n};\r\n\r\n// Calculate KPSP score and result\r\nexport const calculateKPSPResult = (answers: { [questionId: string]: boolean }, totalQuestions: number) => {\r\n  const yesAnswers = Object.values(answers).filter(answer => answer).length;\r\n  const score = yesAnswers;\r\n  const percentage = (score / totalQuestions) * 100;\r\n  \r\n  let result: 'sesuai' | 'meragukan' | 'penyimpangan';\r\n  let resultColor: string;\r\n  let resultMessage: string;\r\n  \r\n  if (percentage >= 80) {\r\n    result = 'sesuai';\r\n    resultColor = 'text-green-600';\r\n    resultMessage = 'Perkembangan anak sesuai dengan tahapan usianya. Teruskan stimulasi yang sudah dilakukan.';\r\n  } else if (percentage >= 60) {\r\n    result = 'meragukan';\r\n    resultColor = 'text-yellow-600';\r\n    resultMessage = 'Ada beberapa aspek perkembangan yang perlu mendapat perhatian lebih. Lakukan stimulasi lebih intensif.';\r\n  } else {\r\n    result = 'penyimpangan';\r\n    resultColor = 'text-red-600';\r\n    resultMessage = 'Beberapa aspek perkembangan memerlukan perhatian khusus. Disarankan konsultasi dengan tenaga kesehatan.';\r\n  }\r\n  \r\n  return {\r\n    score,\r\n    maxScore: totalQuestions,\r\n    percentage: Math.round(percentage),\r\n    result,\r\n    resultColor,\r\n    resultMessage\r\n  };\r\n};\r\n\r\n// Get recommendations based on failed aspects\r\nexport const getRecommendations = (answers: { [questionId: string]: boolean }, questions: any[]): string[] => {\r\n  const recommendations: string[] = [];\r\n  const failedAspects = new Set<string>();\r\n  \r\n  // Identify failed aspects\r\n  questions.forEach(q => {\r\n    if (!answers[q.id]) {\r\n      failedAspects.add(q.aspect);\r\n    }\r\n  });\r\n  \r\n  // Generate recommendations based on failed aspects\r\n  if (failedAspects.has('motorik_kasar')) {\r\n    recommendations.push('Lakukan lebih banyak aktivitas fisik seperti tummy time, latihan duduk, atau bermain bola');\r\n  }\r\n  \r\n  if (failedAspects.has('motorik_halus')) {\r\n    recommendations.push('Berikan mainan yang merangsang kemampuan tangan seperti rattle, finger food, atau aktivitas menggambar');\r\n  }\r\n  \r\n  if (failedAspects.has('bicara_bahasa')) {\r\n    recommendations.push('Perbanyak interaksi verbal, bacakan buku, nyanyikan lagu, dan ajak anak berbicara');\r\n  }\r\n  \r\n  if (failedAspects.has('sosialisasi_kemandirian')) {\r\n    recommendations.push('Ajarkan kemandirian sederhana seperti makan sendiri, bermain dengan anak lain, dan rutinitas harian');\r\n  }\r\n  \r\n  return recommendations;\r\n};\r\n\r\n// Validate email format\r\nexport const isValidEmail = (email: string): boolean => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\n// Validate password strength\r\nexport const validatePassword = (password: string): { isValid: boolean; message: string } => {\r\n  if (password.length < 6) {\r\n    return { isValid: false, message: 'Password minimal 6 karakter' };\r\n  }\r\n  \r\n  if (password.length > 50) {\r\n    return { isValid: false, message: 'Password maksimal 50 karakter' };\r\n  }\r\n  \r\n  return { isValid: true, message: 'Password valid' };\r\n};\r\n\r\n// Storage helpers\r\nexport const storage = {\r\n  get: (key: string) => {\r\n    try {\r\n      const item = localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  },\r\n  \r\n  set: (key: string, value: any) => {\r\n    try {\r\n      localStorage.setItem(key, JSON.stringify(value));\r\n    } catch (error) {\r\n      console.error('Storage error:', error);\r\n    }\r\n  },\r\n  \r\n  remove: (key: string) => {\r\n    try {\r\n      localStorage.removeItem(key);\r\n    } catch (error) {\r\n      console.error('Storage error:', error);\r\n    }\r\n  },\r\n  \r\n  clear: () => {\r\n    try {\r\n      localStorage.clear();\r\n    } catch (error) {\r\n      console.error('Storage error:', error);\r\n    }\r\n  }\r\n};\r\n\r\n// Debounce function for search\r\nexport const debounce = (func: Function, delay: number) => {\r\n  let timeoutId: NodeJS.Timeout;\r\n  return (...args: any[]) => {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => func.apply(null, args), delay);\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}